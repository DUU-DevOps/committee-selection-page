body{
    background-color: white;
    font-family: "Karla";
    color: black;
    font-size: 20px;
}
h1, h3, h2{
    text-align: center;
    margin: 2%;
    margin-bottom: 0;
    
}
h4{
    text-align: center;
    font-size: 24px;
    margin: 2%;
    
}
h3{
    text-decoration: underline;
}
#button-selection input{
    margin-left: 2%;
}
#committeeSelection .row:nth-child(3){
    margin-bottom: 1%;
}
.column {
    /*float: left;*/
    padding-left:1%;
    width: 20%;
    font-size: 18px;
    display: table-cell; /* Make elements inside the container behave like table cells */
    background-color: rgba(24,133,197, .8);
    

}
.column:hover{
    background-color: rgba(24,133,197, 1);
}
#background{
    width: 100vw;
    height: 100vh;
}
.row:after {
    content: "";
    display: table;
    clear: both;
}
#committees img{
    width: 12%;
    float: left;
    margin: 2.3333333%;
    margin-top: 1%;
    margin-bottom: 1%;
}
#committees img:hover{
    cursor: pointer;
}

#background{
    position: absolute;
    top: 0;
    left: 0;
    display: none; 
}
#application{
    position: absolute;
    top: 8%;
    width: 90%;
    padding: 0;
    height: 90%;
    border: 10px solid white;
    display: none;
}
#exit img{
    z-index: 1;
    position: absolute;
    max-height: 5%;
    top: 2%;
    right: 1%;
    display: none;
}
#exit img:hover{
    cursor: pointer;
}

input.largerCheckbox
{
	width: 25px;
	height: 25px;
    vertical-align: middle;
    text-align: center;
}




@media (max-width: 900px){
    #button-selection input{
        margin-left: 10%;
    }
    h3{
        text-align: left;
        margin-left: 10%;
    }
    #committees img{
        width: 20%;
        float: left;
        margin: 2.5%;
        margin-top: 1%;
        margin-bottom: 1%;
    }
    #exit{
        max-height: 2%;
    }
}
@media (max-width: 650px){
    #button-selection input{
        margin-left: 0;
    }
    #button-selection label{
        font-size: 80%;
    }
    h3{
        margin-left: 0;
    }
    #committees img{
        width: 27%;
        float: left;
        margin: 3.166666%;
        margin-top: 4%;
        margin-bottom: 4%;
    }
}
@media (max-width: 450px){
    #button-selection label{
        font-size: 65%;
    }
}
@media (max-width: 400px){
    #button-selection label{
        font-size: 55%;
    }
}



ul.ks-cboxtags {
    list-style: none;
    padding: 0px;
}
ul.ks-cboxtags li{
  display: inline;
}
ul.ks-cboxtags li label{
    display: inline-block;
    background-color: rgba(255, 255, 255, .9);
    border: 2px solid rgba(139, 139, 139, .3);
    color: #2A3390;
    border-radius: 25px;
    white-space: nowrap;
    margin: 3px 0px;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    -webkit-tap-highlight-color: transparent;
    transition: all .2s;
}

ul.ks-cboxtags li label {
    padding: 8px 12px;
    cursor: pointer;
}

ul.ks-cboxtags li label::before {
    display: inline-block;
    font-style: normal;
    font-variant: normal;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
    font-family: "Font Awesome 5 Free";
    font-weight: 900;
    font-size: 12px;
    padding: 2px 6px 2px 2px;
    content: "\f067";
    transition: transform .3s ease-in-out;
}

ul.ks-cboxtags li input[type="checkbox"]:checked + label::before {
    content: "\f00c";
    transform: rotate(-360deg);
    transition: transform .3s ease-in-out;
}

ul.ks-cboxtags li input[type="checkbox"]:checked + label {
    border: 2px solid #1bdbf8;
    background-color: #083975;
    color: #fff;
    transition: all .2s;
}

ul.ks-cboxtags li input[type="checkbox"] {
  display: absolute;
}
ul.ks-cboxtags li input[type="checkbox"] {
  position: absolute;
  opacity: 0;
}
ul.ks-cboxtags li input[type="checkbox"]:focus + label {
  border: 2px solid #e9a1ff;
}

.category{
    font-size: 24px;
    font-weight:bold;
    vertical-align: middle;
}









.toggle{
  --uiToggleSize: var(--toggleSize, 20px);
  --uiToggleIndent: var(--toggleIndent, .5em);
  --uiToggleBorderWidth: var(--toggleBorderWidth, 2px);
  --uiToggleColor: var(--toggleColor, #000);
  --uiToggleDisabledColor: var(--toggleDisabledColor, #868e96);
  --uiToggleBgColor: var(--toggleBgColor, #fff);
  --uiToggleArrowWidth: var(--toggleArrowWidth, 2px);
  --uiToggleArrowColor: var(--toggleArrowColor, #fff);

  display: inline-block;
  position: relative;
}

.toggle__input{
  position: absolute;
  left: -99999px;

}

.toggle__label{
  display: inline-flex;
  cursor: pointer;
  min-height: var(--uiToggleSize);
  padding-left: calc(var(--uiToggleSize) + var(--uiToggleIndent));
}

.toggle__label:before, .toggle__label:after{
  content: "";
  box-sizing: border-box;  
  width: 1em;
  height: 1em;
  font-size: var(--uiToggleSize);

  position: absolute;
  left: 0;
  top: 0;
}

.toggle__label:before{
  border: var(--uiToggleBorderWidth) solid var(--uiToggleColor);
  z-index: 2;
}

.toggle__input:disabled ~ .toggle__label:before{
  border-color: var(--uiToggleDisabledColor);
}

.toggle__input:focus ~ .toggle__label:before{
  box-shadow: 0 0 0 2px var(--uiToggleBgColor), 0 0 0px 4px var(--uiToggleColor);
}

.toggle__input:not(:disabled):checked:focus ~ .toggle__label:after{
  box-shadow: 0 0 0 2px var(--uiToggleBgColor), 0 0 0px 4px var(--uiToggleColor);
}

.toggle__input:not(:disabled) ~ .toggle__label:after{
  background-color: var(--uiToggleColor);
  opacity: 0;
}

.toggle__input:not(:disabled):checked ~ .toggle__label:after{
  opacity: 1;
}

.toggle__text{
  margin-top: auto;
  margin-bottom: auto;
}

/*
The arrow size and position depends from sizes of square because I needed an arrow correct positioning from the top left corner of the element toggle
*/

.toggle__text:before{
  content: "";
  box-sizing: border-box;
  width: 0;
  height: 0;
  font-size: var(--uiToggleSize);

  border-left-width: 0;
  border-bottom-width: 0;
  border-left-style: solid;
  border-bottom-style: solid;
  border-color: var(--uiToggleArrowColor);

  position: absolute;
  top: .5428em;
  left: .2em;
  z-index: 3;

  transform-origin: left top;
  transform: rotate(-40deg) skew(10deg);
}

.toggle__input:not(:disabled):checked ~ .toggle__label .toggle__text:before{
  width: .5em;
  height: .25em;
  border-left-width: var(--uiToggleArrowWidth);
  border-bottom-width: var(--uiToggleArrowWidth);
  will-change: width, height;
  transition: width .1s ease-out .2s, height .2s ease-out;
}

/*
=====
LEVEL 2. PRESENTATION STYLES
=====
*/

/* 
The demo skin
*/

.toggle__label:before, .toggle__label:after{
  border-radius: 2px;
}

/* 
The animation of switching states
*/

.toggle__input:not(:disabled) ~ .toggle__label:before,
.toggle__input:not(:disabled) ~ .toggle__label:after{
  opacity: 1;
  transform-origin: center center;
  will-change: transform;
  transition: transform .2s ease-out;
}

.toggle__input:not(:disabled) ~ .toggle__label:before{
  transform: rotateY(0deg);
  transition-delay: .2s;
}

.toggle__input:not(:disabled) ~ .toggle__label:after{
  transform: rotateY(90deg);
}

.toggle__input:not(:disabled):checked ~ .toggle__label:before{
  transform: rotateY(-90deg);
  transition-delay: 0s;
}

.toggle__input:not(:disabled):checked ~ .toggle__label:after{
  transform: rotateY(0deg);
  transition-delay: .2s;
}

.toggle__text:before{
  opacity: 0;
}

.toggle__input:not(:disabled):checked ~ .toggle__label .toggle__text:before{
  opacity: 1;
  transition: opacity .1s ease-out .3s, width .1s ease-out .5s, height .2s ease-out .3s;
}

/*
=====
LEVEL 3. SETTINGS
=====
*/

.toggle{
  --toggleColor: #690e90;
  --toggleBgColor: #9b59b6;
  --toggleSize: 30px;
}






.col-container {
    display: table; /* Make the container element behave like a table */
    width: 100%; /* Set full-width to expand the whole page */
}

/* If the browser window is smaller than 600px, make the columns stack on top of each other */
@media only screen and (max-width: 600px) {
  .column { 
    display: block;
    width: 100%;
  }
}
